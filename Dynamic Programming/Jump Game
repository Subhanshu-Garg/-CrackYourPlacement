//     int t[10001];
//     bool canJump2(vector<int>& nums,int s,int e){
//         if(s==e){
//             return true;
//         }
//         else if(s > e){
//             return false;
//         }
//         if(t[s] != -1){
//             return t[s];
//         }
        
//         for(int i=nums[s];i>=1;i--){
//             bool r = canJump2(nums,s + i,e);
//             if(r==true){
//                 return t[s] = true;
//             }
//         }
//         return t[s] = false;
//     }
    bool canJump(vector<int>& nums) {
        int n = nums.size() - 1;
        bool t[n+1];
        t[n] = true;
        for(int i=0;i<n;i++) t[i] = false;
        for(int i = n-1;i>=0;i--){
            for(int j=nums[i];j>=0;j--){
                if(i+j<=n && t[i+j] == true){
                    t[i] = true;
                    break;
                }
            }
        }
        
        // memset(t,-1,sizeof(t));
        // return canJump2(nums,0,nums.size()-1);
        return t[0];
    }
