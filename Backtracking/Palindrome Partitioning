class Solution {
public:
    bool isPalindrome(string s){
        int i=0;
        int j= s.size() -1;
        while(i<=j){
            if(s[i] != s[j]){
                return false;
            }
            i++;
            j--;
        }
        
        
        return true;
    }
    void partition(vector<vector<string>>& res, vector<string> part, string s, int start){
        if(start == s.size()){
            res.push_back(part);
            return;
        }
        
        int i = 1;
        while(i <= (s.size() - start)){
            string st;
            st = s.substr(start,i);
            if(isPalindrome(st)){
                part.push_back(st);
                partition(res,part,s,start + i);
                part.pop_back();
            }
            i++;
        }
        
        return;
        
    }
    
    
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        partition(res,{},s,0);
        return res;
    }
};
